{"version":3,"sources":["components/RatingStar.js","components/RatingWidget.js","App.js","reportWebVitals.js","index.js"],"names":["RatingStar","num_of_star","filled","semiFilled","handleMouseEnter","ratingMessage","clickedIdx","handleMouseLeave","handleClicked","handleCancelRating","className","Array","fill","map","i","idx","isFilled","isSemiFilled","join","icon","faStar","onMouseEnter","onMouseLeave","onClick","INITIAL_MESSAGE","RatingWidget","title","customTitle","titleDisabled","cancelable","useState","setFilled","setSemiFilled","setClickedIdx","setRatingMessage","newFilled","push","message","faTimes","App","setcancelable","setTitleDisabled","type","defaultChecked","onChange","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0c032905.chunk.js","sourcesContent":["// import React, {useState, useEffect} from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faStar } from '@fortawesome/free-solid-svg-icons';\r\nimport './RatingStar.scss'\r\n\r\n// const INITIAL_MESSAGE = \"Please give a rating!\"\r\n\r\nexport default function RatingStar({ \r\n    num_of_star=5, \r\n    filled, \r\n    semiFilled,\r\n    ratingMessage,\r\n    clickedIdx,\r\n    handleMouseEnter,\r\n    handleMouseLeave,\r\n    handleClicked,\r\n    handleCancelRating\r\n}) {\r\n\r\n    // const [filled, setFilled] = useState(Array(num_of_star).fill(0))\r\n    // const [semiFilled, setSemiFilled] = useState(Array(num_of_star).fill(0))\r\n    // const [clickedIdx, setClickedIdx] = useState(null)\r\n    // const [ratingMessage, setRatingMessage] = useState(INITIAL_MESSAGE)\r\n\r\n    // const handleMouseEnter = (idx) => {\r\n    //     const newFilled = []\r\n    //     for (var i=0; i<=idx; i++) {\r\n    //         newFilled.push(1)\r\n    //     }\r\n    //     setSemiFilled(newFilled)\r\n    // }\r\n\r\n    // const handleMouseLeave = () => {\r\n    //     setSemiFilled(Array(num_of_star).fill(0))\r\n    // }\r\n\r\n    // const handleClicked = (idx) => {\r\n    //     const newFilled = []\r\n    //     for (var i=0; i<=idx; i++) {\r\n    //         newFilled.push(1)\r\n    //     }\r\n    //     setFilled(newFilled)\r\n    //     setClickedIdx(idx)\r\n\r\n    //     const message = `Thanks! You rated this ${idx+1} out of ${num_of_star} stars.`\r\n    //     setRatingMessage(message)\r\n    // }\r\n\r\n    // const handleCancelRating = () => {\r\n    //     setFilled(Array(num_of_star).fill(0))\r\n    //     setClickedIdx(null)\r\n    //     setRatingMessage(INITIAL_MESSAGE)\r\n    // }\r\n\r\n    return(\r\n        <>\r\n            <div className='rating-stars'>\r\n                {Array(num_of_star).fill(1).map((i, idx) => {\r\n                    const isFilled = filled[idx] ? 'star-icon-filled' : ''\r\n                    const isSemiFilled = semiFilled[idx] ? 'star-icon-semi-filled' : 'star-icon'\r\n                    return (\r\n                        <FontAwesomeIcon \r\n                            className={['a-star', isFilled, isSemiFilled].join(' ')} \r\n                            // className={'star-icon'}\r\n                            icon={faStar} \r\n                            onMouseEnter={() => handleMouseEnter(idx)}\r\n                            onMouseLeave={handleMouseLeave}\r\n                            onClick={() => handleClicked(idx)}\r\n                            key={idx}\r\n                        />\r\n                    )\r\n                })}\r\n            </div>\r\n            {/* <div className='rating-message'>\r\n                <code>{ratingMessage}</code>\r\n            </div>\r\n            {clickedIdx !== null ?\r\n                <div className='rating-cancel' onClick={handleCancelRating}>\r\n                    <FontAwesomeIcon className='rating-cancel-icon' icon={faTimes} />\r\n                    <span>remove my rating</span>\r\n                </div>\r\n                :\r\n                ''\r\n            } */}\r\n        </>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport RatingStar from './RatingStar'\r\n\r\nconst INITIAL_MESSAGE = \"Please give a rating!\"\r\n\r\nexport default function RatingWidget({ \r\n    num_of_star=5, \r\n    title=\"Rating Widget\",\r\n    customTitle=null,\r\n    titleDisabled=false,\r\n    cancelable=true,\r\n}) {\r\n\r\n    const [filled, setFilled] = useState(Array(num_of_star).fill(0))\r\n    const [semiFilled, setSemiFilled] = useState(Array(num_of_star).fill(0))\r\n    const [clickedIdx, setClickedIdx] = useState(null)\r\n    const [ratingMessage, setRatingMessage] = useState(INITIAL_MESSAGE)\r\n\r\n    const handleMouseEnter = (idx) => {\r\n        const newFilled = []\r\n        for (var i=0; i<=idx; i++) {\r\n            newFilled.push(1)\r\n        }\r\n        setSemiFilled(newFilled)\r\n    }\r\n\r\n    const handleMouseLeave = () => {\r\n        setSemiFilled(Array(num_of_star).fill(0))\r\n    }\r\n\r\n    const handleClicked = (idx) => {\r\n        const newFilled = []\r\n        for (var i=0; i<=idx; i++) {\r\n            newFilled.push(1)\r\n        }\r\n        setFilled(newFilled)\r\n        setClickedIdx(idx)\r\n\r\n        const message = `Thanks! You rated this ${idx+1} out of ${num_of_star} stars.`\r\n        setRatingMessage(message)\r\n    }\r\n\r\n    const handleCancelRating = () => {\r\n        setFilled(Array(num_of_star).fill(0))\r\n        setClickedIdx(null)\r\n        setRatingMessage(INITIAL_MESSAGE)\r\n    }\r\n\r\n    return (\r\n\t\t<div>\r\n            {titleDisabled ? ''\r\n                :\r\n                customTitle ? customTitle : <h1>{title}</h1>\r\n            }\r\n\t\t\t<RatingStar \r\n                num_of_star={num_of_star} \r\n                cancelable={cancelable}\r\n                filled={filled}\r\n                semiFilled={semiFilled}\r\n                clickedIdx={clickedIdx}\r\n                handleClicked={handleClicked}\r\n                handleMouseEnter={handleMouseEnter}\r\n                handleMouseLeave={handleMouseLeave}\r\n                handleCancelRating={handleCancelRating}\r\n            />\r\n            <div className='rating-message'>\r\n                <code>{ratingMessage}</code>\r\n            </div>\r\n            {cancelable && clickedIdx !== null ?\r\n                <div className='rating-cancel' onClick={handleCancelRating}>\r\n                    <FontAwesomeIcon className='rating-cancel-icon' icon={faTimes} />\r\n                    <span>remove my rating</span>\r\n                </div>\r\n                :\r\n                ''\r\n            }\r\n\t\t</div>\r\n    )\r\n\r\n}","import './App.scss';\nimport RatingWidget from './components/RatingWidget'\nimport React, {useState} from 'react'\n\nfunction App() {\n\n\tconst [cancelable, setcancelable] = useState(true)\n\tconst [titleDisabled, setTitleDisabled] = useState(false)\n\n\tconst customTitle = () => {\n\t\treturn (\n\t\t\t<h2 className=\"custom-title\">\n\t\t\t\tCreate your own title component\n\t\t\t</h2>\n\t\t)\n\t}\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<header className=\"App-header\">\n\t\t\t\t<p>\n\t\t\t\t\tThis is an example of a rating widget | <code>{'<RatingWidget />'}</code>\n\t\t\t\t</p>\n\t\t\t</header>\n\t\t\t<RatingWidget />\n\t\t\t<hr></hr>\n\t\t\t<RatingWidget title={\"Customized your title and number of stars\"} num_of_star={10} />\n\t\t\t<hr></hr>\n\t\t\t<label>\n\t\t\t\t<input type=\"checkbox\" defaultChecked={cancelable} onChange={() => setcancelable(!cancelable)}/>\n\t\t\t\t<span>Rating cancelable?</span>\n\t\t\t</label>\n\t\t\t<br></br>\n\t\t\t<label>\n\t\t\t\t<input type=\"checkbox\" defaultChecked={titleDisabled} onChange={() => setTitleDisabled(!titleDisabled)}/>\n\t\t\t\t<span>Title disabled?</span>\n\t\t\t</label>\n\t\t\t<RatingWidget title={\"Disable your title, make your rating uncancelable\"} cancelable={cancelable} titleDisabled={titleDisabled}/>\n\t\t\t<hr></hr>\n\t\t\t<RatingWidget customTitle={customTitle()} />\n\t\t\t<hr></hr>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}