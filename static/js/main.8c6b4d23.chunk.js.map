{"version":3,"sources":["components/RatingStar.js","components/RatingWidget.js","App.js","reportWebVitals.js","index.js"],"names":["RatingStar","num_of_star","filled","semiFilled","handleMouseEnter","ratingMessage","handleMouseLeave","handleClicked","className","Array","fill","map","i","idx","isFilled","isSemiFilled","join","icon","faStar","onMouseEnter","onMouseLeave","onClick","RatingCancel","cancelable","clickedIdx","handleCancelRating","faTimes","RatingMessage","customMessages","message","length","RatingWidget","title","customTitle","titleDisabled","num_of_star_","parseInt","useState","setFilled","setSemiFilled","setClickedIdx","newFilled","push","useEffect","App","setcancelable","setTitleDisabled","setTitle","numberOfStars","setNumberOfStars","type","defaultValue","onChange","e","target","value","min","max","handleNumberChange","defaultChecked","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mRAOe,SAASA,EAAT,GAUX,IAAD,IATCC,mBASD,MATa,EASb,EARCC,EAQD,EARCA,OACAC,EAOD,EAPCA,WAGAC,GAID,EANCC,cAMD,EAJCD,kBACAE,EAGD,EAHCA,iBACAC,EAED,EAFCA,cAuCA,OACI,mCACI,qBAAKC,UAAU,eAAf,SACKC,MAAMR,GAAaS,KAAK,GAAGC,KAAI,SAACC,EAAGC,GAChC,IAAMC,EAAWZ,EAAOW,GAAO,mBAAqB,GAC9CE,EAAeZ,EAAWU,GAAO,wBAA0B,YACjE,OACI,cAAC,IAAD,CACIL,UAAW,CAAC,SAAUM,EAAUC,GAAcC,KAAK,KAEnDC,KAAMC,IACNC,aAAc,kBAAMf,EAAiBS,IACrCO,aAAcd,EACde,QAAS,kBAAMd,EAAcM,KACxBA,UC/DjC,IAEMS,EAAe,SAAC,GAAkD,IAAjDC,EAAgD,EAAhDA,WAAYC,EAAoC,EAApCA,WAAYC,EAAwB,EAAxBA,mBAC3C,OACI,mCACKF,IAA8B,IAAhBC,EACX,sBAAKhB,UAAU,gBAAgBa,QAASI,EAAxC,UACI,cAAC,IAAD,CAAiBjB,UAAU,qBAAqBS,KAAMS,MACtD,uDAGJ,MAMVC,EAAgB,SAAC,GAAkD,IAAD,IAAhDC,sBAAgD,MAAjC,GAAiC,EAA7BJ,EAA6B,EAA7BA,WAAYvB,EAAiB,EAAjBA,YAC/C4B,EAAU,GAYd,OAVIA,EAD0B,IAA1BD,EAAeE,OACLF,EAAeJ,IAEL,IAAhBA,EACO,iCAA6BA,EAAW,EAAxC,mBAAoDvB,EAApD,WAvBK,wBA+BhB,qBAAKO,UAAU,iBAAf,SACI,+BAAOqB,OAKJ,SAASE,EAAT,GAOX,IAAD,IANC9B,mBAMD,MANa,EAMb,MALC+B,aAKD,MALO,gBAKP,MAJCC,mBAID,MAJa,KAIb,MAHCC,qBAGD,aAFCX,kBAED,aADCK,sBACD,MADgB,GAChB,EAEKO,EAAelC,EAAcmC,SAASnC,GAAe,EAF1D,EAI6BoC,mBAAS5B,MAAM0B,GAAczB,KAAK,IAJ/D,mBAIQR,EAJR,KAIgBoC,EAJhB,OAKqCD,mBAAS5B,MAAM0B,GAAczB,KAAK,IALvE,mBAKQP,EALR,KAKoBoC,EALpB,OAMqCF,oBAAU,GAN/C,mBAMQb,EANR,KAMoBgB,EANpB,KAqBOjC,EAAgB,SAACM,GAEnB,IADA,IAAM4B,EAAY,GACT7B,EAAE,EAAGA,GAAGC,EAAKD,IAClB6B,EAAUC,KAAK,GAEnBJ,EAAUG,GACVD,EAAc3B,IA+BlB,OANA8B,qBAAU,WACFnB,GAAcW,GACd5B,EAAc4B,EAAa,KAEhC,CAACA,EAAcX,IAGpB,gCACWU,EAAgB,GAEbD,GAA4B,6BAAKD,IAE9C,cAAC,EAAD,CACa/B,YAAakC,EACbZ,WAAYA,EACZrB,OAAQA,EACRC,WAAYA,EAEZI,cAAeA,EACfH,iBA9Da,SAACS,GAEtB,IADA,IAAM4B,EAAY,GACT7B,EAAE,EAAGA,GAAGC,EAAKD,IAClB6B,EAAUC,KAAK,GAEnBH,EAAcE,IA0DNnC,iBAvDa,WACrBiC,EAAc9B,MAAM0B,GAAczB,KAAK,OAyDnC,cAAC,EAAD,CACIc,WAAYA,EACZvB,YAAakC,EACbP,eAAgBA,IAEpB,cAAC,EAAD,CACIL,WAAYA,EACZC,WAAYA,EACZC,mBApDe,WACvBa,EAAU7B,MAAM0B,GAAczB,KAAK,IACnC8B,GAAe,SCnBRI,MA3Df,WAAgB,IAAD,EAEsBP,oBAAS,GAF/B,mBAEPd,EAFO,KAEKsB,EAFL,OAG4BR,oBAAS,GAHrC,mBAGPH,EAHO,KAGQY,EAHR,OAIYT,mBAAS,6CAJrB,mBAIPL,EAJO,KAIAe,EAJA,OAK4BV,mBAAS,IALrC,mBAKPW,EALO,KAKQC,EALR,KAoBd,OACC,sBAAKzC,UAAU,MAAf,UACC,wBAAQA,UAAU,aAAlB,SACC,yEACyC,+BAAO,0BAIjD,cAACuB,EAAD,IACA,uBAEA,kCACE,qBACD,uBAAOmB,KAAK,OAAOC,aAAcnB,EAAOoB,SAAU,SAACC,GAAD,OAAON,EAASM,EAAEC,OAAOC,aAE5E,uBACA,kCACE,oBACD,uBAAOL,KAAK,SAASM,IAAI,IAAIC,IAAI,KAAKN,aAAcH,EAAeI,SAAU,SAACC,GAAD,OAvBrD,SAACA,GAE3BJ,EAAiBI,EAAEC,OAAOC,OAqB4DG,CAAmBL,SAExG,uBACA,kCACC,uBAAOH,KAAK,WAAWS,eAAgBpC,EAAY6B,SAAU,kBAAMP,GAAetB,MAClF,yDAED,uBACA,kCACC,uBAAO2B,KAAK,WAAWS,eAAgBzB,EAAekB,SAAU,kBAAMN,GAAkBZ,MACxF,sDAED,cAACH,EAAD,CAAc9B,YAAa+C,EAAehB,MAAOA,EAAOT,WAAYA,EAAYW,cAAeA,IAC/F,uBAEA,cAACH,EAAD,CAAcE,YA5Cd,oBAAIzB,UAAU,eAAd,+CA6CA,2BC9CYoD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8c6b4d23.chunk.js","sourcesContent":["// import React, {useState, useEffect} from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faStar } from '@fortawesome/free-solid-svg-icons';\r\nimport './RatingStar.scss'\r\n\r\n// const INITIAL_MESSAGE = \"Please give a rating!\"\r\n\r\nexport default function RatingStar({ \r\n    num_of_star=5, \r\n    filled, \r\n    semiFilled,\r\n    ratingMessage,\r\n    // clickedIdx,\r\n    handleMouseEnter,\r\n    handleMouseLeave,\r\n    handleClicked,\r\n    // handleCancelRating\r\n}) {\r\n\r\n    // const [filled, setFilled] = useState(Array(num_of_star).fill(0))\r\n    // const [semiFilled, setSemiFilled] = useState(Array(num_of_star).fill(0))\r\n    // const [clickedIdx, setClickedIdx] = useState(null)\r\n    // const [ratingMessage, setRatingMessage] = useState(INITIAL_MESSAGE)\r\n\r\n    // const handleMouseEnter = (idx) => {\r\n    //     const newFilled = []\r\n    //     for (var i=0; i<=idx; i++) {\r\n    //         newFilled.push(1)\r\n    //     }\r\n    //     setSemiFilled(newFilled)\r\n    // }\r\n\r\n    // const handleMouseLeave = () => {\r\n    //     setSemiFilled(Array(num_of_star).fill(0))\r\n    // }\r\n\r\n    // const handleClicked = (idx) => {\r\n    //     const newFilled = []\r\n    //     for (var i=0; i<=idx; i++) {\r\n    //         newFilled.push(1)\r\n    //     }\r\n    //     setFilled(newFilled)\r\n    //     setClickedIdx(idx)\r\n\r\n    //     const message = `Thanks! You rated this ${idx+1} out of ${num_of_star} stars.`\r\n    //     setRatingMessage(message)\r\n    // }\r\n\r\n    // const handleCancelRating = () => {\r\n    //     setFilled(Array(num_of_star).fill(0))\r\n    //     setClickedIdx(null)\r\n    //     setRatingMessage(INITIAL_MESSAGE)\r\n    // }\r\n\r\n    return(\r\n        <>\r\n            <div className='rating-stars'>\r\n                {Array(num_of_star).fill(1).map((i, idx) => {\r\n                    const isFilled = filled[idx] ? 'star-icon-filled' : ''\r\n                    const isSemiFilled = semiFilled[idx] ? 'star-icon-semi-filled' : 'star-icon'\r\n                    return (\r\n                        <FontAwesomeIcon \r\n                            className={['a-star', isFilled, isSemiFilled].join(' ')} \r\n                            // className={'star-icon'}\r\n                            icon={faStar} \r\n                            onMouseEnter={() => handleMouseEnter(idx)}\r\n                            onMouseLeave={handleMouseLeave}\r\n                            onClick={() => handleClicked(idx)}\r\n                            key={idx}\r\n                        />\r\n                    )\r\n                })}\r\n            </div>\r\n            {/* <div className='rating-message'>\r\n                <code>{ratingMessage}</code>\r\n            </div>\r\n            {clickedIdx !== null ?\r\n                <div className='rating-cancel' onClick={handleCancelRating}>\r\n                    <FontAwesomeIcon className='rating-cancel-icon' icon={faTimes} />\r\n                    <span>remove my rating</span>\r\n                </div>\r\n                :\r\n                ''\r\n            } */}\r\n        </>\r\n    )\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport RatingStar from './RatingStar'\r\n\r\nconst INITIAL_MESSAGE = \"Please give a rating!\"\r\n\r\nconst RatingCancel = ({cancelable, clickedIdx, handleCancelRating}) => {\r\n    return (\r\n        <>\r\n            {cancelable && clickedIdx !== -1 ?\r\n                <div className='rating-cancel' onClick={handleCancelRating}>\r\n                    <FontAwesomeIcon className='rating-cancel-icon' icon={faTimes} />\r\n                    <span>remove my rating</span>\r\n                </div>\r\n                :\r\n                ''\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nconst RatingMessage = ({customMessages=[], clickedIdx, num_of_star}) => {\r\n    let message = ''\r\n    if (customMessages.length !== 0) {\r\n        message = customMessages[clickedIdx]\r\n    } else {\r\n        if (clickedIdx !== -1) {\r\n            message = `Thanks! You rated this ${clickedIdx+1} out of ${num_of_star} stars.`\r\n            // setRatingMessage(message)\r\n        } else {\r\n            message = INITIAL_MESSAGE\r\n            // setRatingMessage(INITIAL_MESSAGE)\r\n        }\r\n    }\r\n    return (\r\n        <div className='rating-message'>\r\n            <code>{message}</code>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default function RatingWidget({ \r\n    num_of_star=5, \r\n    title=\"Rating Widget\",\r\n    customTitle=null,\r\n    titleDisabled=false,\r\n    cancelable=true,\r\n    customMessages=[],\r\n}) {\r\n\r\n    let num_of_star_ = num_of_star ? parseInt(num_of_star) : 1\r\n\r\n    const [filled, setFilled] = useState(Array(num_of_star_).fill(0))\r\n    const [semiFilled, setSemiFilled] = useState(Array(num_of_star_).fill(0))\r\n    const [clickedIdx, setClickedIdx] = useState(-1)\r\n    // const [ratingMessage, setRatingMessage] = useState(INITIAL_MESSAGE)\r\n\r\n    const handleMouseEnter = (idx) => {\r\n        const newFilled = []\r\n        for (var i=0; i<=idx; i++) {\r\n            newFilled.push(1)\r\n        }\r\n        setSemiFilled(newFilled)\r\n    }\r\n\r\n    const handleMouseLeave = () => {\r\n        setSemiFilled(Array(num_of_star_).fill(0))\r\n    }\r\n\r\n    const handleClicked = (idx) => {\r\n        const newFilled = []\r\n        for (var i=0; i<=idx; i++) {\r\n            newFilled.push(1)\r\n        }\r\n        setFilled(newFilled)\r\n        setClickedIdx(idx)\r\n\r\n    }\r\n\r\n    const handleCancelRating = () => {\r\n        setFilled(Array(num_of_star_).fill(0))\r\n        setClickedIdx(-1)\r\n    }\r\n\r\n    // const handleRatingMessage = (idx) => {\r\n    //     let message = ''\r\n    //     if (idx !== -1) {\r\n    //         message = `Thanks! You rated this ${idx+1} out of ${num_of_star_} stars.`\r\n    //         // setRatingMessage(message)\r\n    //     } else {\r\n    //         message = INITIAL_MESSAGE\r\n    //         // setRatingMessage(INITIAL_MESSAGE)\r\n    //     }\r\n    //     return (\r\n    //         <div className='rating-message'>\r\n    //             <code>{message}</code>\r\n    //         </div>\r\n    //     )\r\n    // }\r\n\r\n    useEffect(() => {\r\n        if (clickedIdx >= num_of_star_) {\r\n            handleClicked(num_of_star_-1)\r\n        }\r\n    }, [num_of_star_, clickedIdx])\r\n\r\n    return (\r\n\t\t<div>\r\n            {titleDisabled ? ''\r\n                :\r\n                customTitle ? customTitle : <h1>{title}</h1>\r\n            }\r\n\t\t\t<RatingStar \r\n                num_of_star={num_of_star_} \r\n                cancelable={cancelable}\r\n                filled={filled}\r\n                semiFilled={semiFilled}\r\n                // clickedIdx={clickedIdx}\r\n                handleClicked={handleClicked}\r\n                handleMouseEnter={handleMouseEnter}\r\n                handleMouseLeave={handleMouseLeave}\r\n                // handleCancelRating={handleCancelRating}\r\n            />\r\n            <RatingMessage\r\n                clickedIdx={clickedIdx}\r\n                num_of_star={num_of_star_}\r\n                customMessages={customMessages}\r\n            />\r\n            <RatingCancel \r\n                cancelable={cancelable} \r\n                clickedIdx={clickedIdx}\r\n                handleCancelRating={handleCancelRating}\r\n            />\r\n\t\t</div>\r\n    )\r\n\r\n}","import './App.scss';\nimport RatingWidget from './components/RatingWidget'\nimport React, {useState} from 'react'\n\nfunction App() {\n\n\tconst [cancelable, setcancelable] = useState(true)\n\tconst [titleDisabled, setTitleDisabled] = useState(false)\n\tconst [title, setTitle] = useState(\"Customized your title and number of stars\")\n\tconst [numberOfStars, setNumberOfStars] = useState(10)\n\n\tconst customTitle = () => {\n\t\treturn (\n\t\t\t<h2 className=\"custom-title\">\n\t\t\t\tCreate your own title component\n\t\t\t</h2>\n\t\t)\n\t}\n\n\tconst handleNumberChange = (e) => {\n\t\t// let number = e.target.value ? parseInt(e.target.value) : 1\n\t\tsetNumberOfStars(e.target.value)\n\t}\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<header className=\"App-header\">\n\t\t\t\t<p>\n\t\t\t\t\tThis is an example of a rating widget | <code>{'<RatingWidget />'}</code>\n\t\t\t\t</p>\n\t\t\t</header>\n\n\t\t\t<RatingWidget />\n\t\t\t<hr></hr>\n\n\t\t\t<label>\n\t\t\t\t{\"Input your title: \"}\n\t\t\t\t<input type=\"text\" defaultValue={title} onChange={(e) => setTitle(e.target.value)}/>\n\t\t\t</label>\n\t\t\t<br></br>\n\t\t\t<label>\n\t\t\t\t{\"Number of stars: \"}\n\t\t\t\t<input type=\"number\" min=\"1\" max=\"50\" defaultValue={numberOfStars} onChange={(e) => handleNumberChange(e)}/>\n\t\t\t</label>\n\t\t\t<br></br>\n\t\t\t<label>\n\t\t\t\t<input type=\"checkbox\" defaultChecked={cancelable} onChange={() => setcancelable(!cancelable)}/>\n\t\t\t\t<span>Rating cancelable?</span>\n\t\t\t</label>\n\t\t\t<br></br>\n\t\t\t<label>\n\t\t\t\t<input type=\"checkbox\" defaultChecked={titleDisabled} onChange={() => setTitleDisabled(!titleDisabled)}/>\n\t\t\t\t<span>Title disabled?</span>\n\t\t\t</label>\n\t\t\t<RatingWidget num_of_star={numberOfStars} title={title} cancelable={cancelable} titleDisabled={titleDisabled}/>\n\t\t\t<hr></hr>\n\t\t\t\n\t\t\t<RatingWidget customTitle={customTitle()} />\n\t\t\t<hr></hr>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}